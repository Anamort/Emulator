
"""
Custom topology for Mininet, generated by GraphML-Topo-to-Mininet-Network-Generator.
"""
from mininet.topo import Topo
from rau_nodes import RAUSwitch, QuaggaRouter, RAUController, RAUHost
class CustomTopology( Topo ):
    "Internet Topology Zoo Specimen."
    def __init__( self, **opts ):
        "Create a topology."
        # Initialize Topology
        Topo.__init__( self, **opts )

        # Add controller
        root = self.addHost('controller', cls=RAUController, ip='192.168.1.10/24')
        # Add management network switch
        man_switch = self.addSwitch('s1', protocols='OpenFlow13', failMode='standalone')

        # Add switches, hosts and routers
        SRI = self.addHost('switch2', loopback='127.0.0.1', controller_ip='192.168.1.10', cls=RAUSwitch, ips=['192.168.1.11/24','10.10.2.1/24','10.10.3.1/24'])
        HARVARD = self.addHost('switch1', loopback='127.0.0.1', controller_ip='192.168.1.10', cls=RAUSwitch, ips=['192.168.1.12/24','10.10.1.1/24'])
        UCLA = self.addHost('switch4', loopback='127.0.0.1', controller_ip='192.168.1.10', cls=RAUSwitch, ips=['192.168.1.13/24','10.10.3.2/24','10.10.4.2/24','10.10.5.1/24'])
        UCSB = self.addHost('switch3', loopback='127.0.0.1', controller_ip='192.168.1.10', cls=RAUSwitch, ips=['192.168.1.14/24','10.10.2.2/24','10.10.4.1/24'])
        SDC = self.addHost('switch6', loopback='127.0.0.1', controller_ip='192.168.1.10', cls=RAUSwitch, ips=['192.168.1.15/24','10.10.7.2/24','10.10.8.1/24'])
        RAND = self.addHost('switch5', loopback='127.0.0.1', controller_ip='192.168.1.10', cls=RAUSwitch, ips=['192.168.1.16/24','10.10.5.2/24','10.10.6.1/24','10.10.7.1/24'])
        MIT = self.addHost('switch8', loopback='127.0.0.1', controller_ip='192.168.1.10', cls=RAUSwitch, ips=['192.168.1.17/24','10.10.9.2/24','10.10.10.1/24','10.10.13.2/24'])
        UTAH = self.addHost('switch7', loopback='127.0.0.1', controller_ip='192.168.1.10', cls=RAUSwitch, ips=['192.168.1.18/24','10.10.8.2/24','10.10.9.1/24'])
        BBN = self.addHost('switch9', loopback='127.0.0.1', controller_ip='192.168.1.10', cls=RAUSwitch, ips=['192.168.1.19/24','10.10.1.2/24','10.10.6.2/24','10.10.10.2/24','10.10.14.2/24'])

        # Add links between nodes
        self.addLink(man_switch, root, 1, 0)
        self.addLink(man_switch, ROUTERUNO, 2, 0)
        self.addLink(man_switch, HOSTDOS, 3, 0)
        self.addLink(man_switch, ROUTERDOS, 4, 0)
        self.addLink(man_switch, SRI, 5, 0)
        self.addLink(man_switch, HARVARD, 6, 0)
        self.addLink(man_switch, UCLA, 7, 0)
        self.addLink(man_switch, UCSB, 8, 0)
        self.addLink(man_switch, SDC, 9, 0)
        self.addLink(man_switch, RAND, 10, 0)
        self.addLink(man_switch, MIT, 11, 0)
        self.addLink(man_switch, UTAH, 12, 0)
        self.addLink(man_switch, HOSTUNO, 13, 0)
        self.addLink(man_switch, BBN, 14, 0)
        self.addLink(HARVARD, BBN, 1, 1)
        self.addLink(SRI, UCSB, 1, 1)
        self.addLink(SRI, UCLA, 2, 1)
        self.addLink(UCLA, UCSB, 2, 2)
        self.addLink(UCLA, RAND, 3, 1)
        self.addLink(BBN, RAND, 2, 2)
        self.addLink(SDC, RAND, 1, 3)
        self.addLink(SDC, UTAH, 2, 1)
        self.addLink(MIT, UTAH, 1, 2)
        self.addLink(BBN, MIT, 3, 2)
        self.addLink(HOSTUNO, ROUTERUNO, 1, 1)
        self.addLink(HOSTDOS, ROUTERDOS, 1, 1)
        self.addLink(ROUTERUNO, MIT, 2, 3)
        self.addLink(BBN, ROUTERDOS, 4, 2)
