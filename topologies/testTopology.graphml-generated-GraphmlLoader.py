
"""
Custom topology for Mininet, generated by GraphML Loader.
"""
from mininet.topo import Topo
from rau_nodes import RAUSwitch, QuaggaRouter, RAUController, RAUHost
class CustomTopology( Topo ):
    def __init__(self):
        "Create a topology."
        # Initialize Topology
        Topo.__init__(self)

        # Add controller
        controller = self.addHost('controller', cls=RAUController, ips=['192.168.1.10/24'])
        # Add management network switch
        man_switch = self.addSwitch('s1', protocols='OpenFlow13', failMode='standalone')

        # Add switches, hosts and routers
        switch2 = self.addHost('switch2', cls=RAUSwitch, controller_ip='192.168.1.10', ips=['192.168.1.11/24', '10.10.1.2/24', '10.10.4.1/24', '10.10.5.1/24'])
        switch1 = self.addHost('switch1', cls=RAUSwitch, controller_ip='192.168.1.10', ips=['192.168.1.12/24', '10.10.1.1/24', '10.10.2.1/24', '10.10.3.1/24'])
        switch4 = self.addHost('switch4', cls=RAUSwitch, controller_ip='192.168.1.10', ips=['192.168.1.13/24', '10.10.3.2/24', '10.10.5.2/24', '10.10.6.2/24', '10.10.8.1/24'], border=1, ce_ip_address='10.10.8.2', ce_mac_address='00:00:00:00:00:2')
        switch3 = self.addHost('switch3', cls=RAUSwitch, controller_ip='192.168.1.10', ips=['192.168.1.14/24', '10.10.2.2/24', '10.10.4.2/24', '10.10.6.1/24', '10.10.7.1/24'], border=1, ce_ip_address='10.10.7.2', ce_mac_address='00:00:00:00:00:1')
        router6 = self.addHost('router6', cls=QuaggaRouter, ips=['10.10.8.2/24', '10.10.10.1/24'], ce_mac_address='00:00:00:00:00:2', gw='10.10.8.1')
        router5 = self.addHost('router5', cls=QuaggaRouter, ips=['10.10.7.2/24', '10.10.9.1/24'], ce_mac_address='00:00:00:00:00:1', gw='10.10.7.1')
        host8 = self.addHost('host8', cls=RAUHost, ips=['10.10.10.2/24'])
        host7 = self.addHost('host7', cls=RAUHost, ips=['10.10.9.2/24'])

        # Add links between nodes
        self.addLink(man_switch, controller, 1, 0)
        self.addLink(man_switch, switch2, 2, 0)
        self.addLink(man_switch, switch1, 3, 0)
        self.addLink(man_switch, switch4, 4, 0)
        self.addLink(man_switch, switch3, 5, 0)
        self.addLink(switch2, switch1, 1, 1)
        self.addLink(switch1, switch3, 2, 1)
        self.addLink(switch1, switch4, 3, 1)
        self.addLink(switch2, switch3, 2, 2)
        self.addLink(switch2, switch4, 3, 2)
        self.addLink(switch4, switch3, 3, 3)
        self.addLink(switch3, router5, 4, 0)
        self.addLink(switch4, router6, 4, 0)
        self.addLink(router5, host7, 1, 0)
        self.addLink(router6, host8, 1, 0)
